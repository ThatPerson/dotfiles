#
# plugins.conf -- weechat v0.4.1
#

[var]
fifo.fifo = "on"
lua.check_license = "off"
perl.check_license = "off"
perl.coords.color.selection = "reverse.brown,black"
perl.coords.color.selection_cursor = "reverse.underline"
perl.coords.color.url_highlight = "reverse.underline"
perl.coords.color.url_highlight_active = "reverse.brown,black"
perl.coords.copybuf_short_name = "Â©"
perl.coords.hyper_channels = "off"
perl.coords.hyper_nicks = "off"
perl.coords.hyper_show = "url"
perl.coords.mouse.click_select_pane = "on"
perl.coords.mouse.click_through_pane = "off"
perl.coords.mouse.close_on_release = "110"
perl.coords.mouse.copy_on_click = "on"
perl.coords.mouse.handle_scroll = "off"
perl.coords.mouse.scroll_inactive_pane = "on"
perl.coords.mouse.url_open_2nd_click = "off"
perl.coords.url_braces = "[({<"''">})]"
perl.coords.url_non_beginnings = "\W"
perl.coords.url_non_endings = "[.,;:?!_-]"
perl.coords.url_regex = "\w+://\S+ | (?:^|(?<=\s))(?:\S+\.){2,}\w{2,5}(?:/\S*|(?=\s)|$) | (?:^|(?<=\s))(?:\S+\.)+\w{2,5}/(?:\S+)?"
perl.coords.use_nick_menu = "off"
perl.coords.xterm_compatible = "rxvt-uni"
perl.launcher.signal.weechat_highlight = "/home/kopri/scripts/weechatnotify"
perl.launcher.signal.weechat_highlisght = "/home/kopri/scripts/weechatnotify"
perl.rslap.slapback = "off"
perl.sysinfo.baritems = "memory"
perl.sysinfo.color = "default"
perl.sysinfo.nic = ""
perl.sysinfo.nicname = ""
perl.sysinfo.refresh = "0"
perl.sysinfo.showbattery = "off"
perl.sysinfo.showcpu = "on"
perl.sysinfo.showdiskusage = "on"
perl.sysinfo.showdistro = "on"
perl.sysinfo.showhostname = "on"
perl.sysinfo.showloadaverage = "on"
perl.sysinfo.showmemoryusage = "on"
perl.sysinfo.shownetworktraffic = "off"
perl.sysinfo.showos = "on"
perl.sysinfo.showprocesses = "on"
perl.sysinfo.showuptime = "on"
perl.sysinfo.showusers = "on"
perl.sysinfo.text_battery = "Battery: "
perl.sysinfo.text_color = "default"
perl.sysinfo.text_cpu = "CPU: "
perl.sysinfo.text_diskusage = "Disk Usage: "
perl.sysinfo.text_distro = "Distro: "
perl.sysinfo.text_dummy = "-"
perl.sysinfo.text_hostname = "Host: "
perl.sysinfo.text_loadaverage = "Load Average: "
perl.sysinfo.text_memoryusage = "Memory Usage: "
perl.sysinfo.text_network = "Network: "
perl.sysinfo.text_os = "OS: "
perl.sysinfo.text_processes = "Processes: "
perl.sysinfo.text_uptime = "Uptime: "
perl.sysinfo.text_users = "Users: "
perl.sysinfo.useshorthostname = "on"
python.check_license = "off"
python.clone_scanner.autofocus = "on"
python.clone_scanner.clone_onjoin_alert_key = "mask"
python.clone_scanner.clone_report_key = "mask"
python.clone_scanner.colors.clone_report.clone.match = "chat"
python.clone_scanner.colors.clone_report.clone.message = "chat"
python.clone_scanner.colors.clone_report.header.channel = "bold"
python.clone_scanner.colors.clone_report.header.message = "chat"
python.clone_scanner.colors.clone_report.header.number_of_hosts = "bold"
python.clone_scanner.colors.clone_report.subheader.host = "bold"
python.clone_scanner.colors.clone_report.subheader.message = "chat"
python.clone_scanner.colors.clone_report.subheader.number_of_clones = "bold"
python.clone_scanner.colors.join_messages.channel = "bold"
python.clone_scanner.colors.join_messages.identhost = "chat"
python.clone_scanner.colors.join_messages.message = "chat"
python.clone_scanner.colors.join_messages.nick = "bold"
python.clone_scanner.colors.mask.identhost = ""
python.clone_scanner.colors.mask.nick = "bold"
python.clone_scanner.colors.onjoin_alert.channel = "red"
python.clone_scanner.colors.onjoin_alert.matches = "bold red"
python.clone_scanner.colors.onjoin_alert.message = "red"
python.clone_scanner.colors.onjoin_alert.nick = "bold red"
python.clone_scanner.compare_idents = "off"
python.clone_scanner.display_join_messages = "off"
python.clone_scanner.display_onjoin_alert_clone_buffer = "on"
python.clone_scanner.display_onjoin_alert_current_buffer = "off"
python.clone_scanner.display_onjoin_alert_target_buffer = "on"
python.clone_scanner.display_scan_report_clone_buffer = "on"
python.clone_scanner.display_scan_report_current_buffer = "on"
python.clone_scanner.display_scan_report_target_buffer = "off"
python.country.show_in_whois = "on"
python.country.show_localtime = "on"
python.country.time_format = "%x %X %Z"
python.crypt.cipher = "blowfish"
python.crypt.message_indicator = "(enc) "
python.crypt.statusbar_indicator = " (encrypted) "
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.histsearch.color_name = "black,cyan"
python.histsearch.color_name_highlight = "red,cyan"
python.histsearch.color_name_highlight_selected = "red,brown"
python.histsearch.color_name_selected = "black,brown"
python.histsearch.color_number = "yellow,magenta"
python.histsearch.color_number_selected = "yellow,red"
python.histsearch.message = "Command: "
python.slock_away.away = "0"
python.slock_away.away_message = "Away"
python.slock_away.interval = "20"
python.urlbar.ignore = "grep"
python.urlbar.remember_amount = "25"
python.urlbar.show_buffername = "on"
python.urlbar.show_index = "on"
python.urlbar.show_nick = "on"
python.urlbar.show_timestamp = "on"
python.urlbar.time_format = "%H:%M"
python.urlbar.use_popup = "on"
python.urlbar.visible_amount = "5"
python.urlbar.visible_seconds = "5"
python.whois_on_query.command = "/whois $nick $nick"
python.whois_on_query.self_query = "off"
ruby.check_license = "off"
tcl.check_license = "off"

[desc]
perl.coords.clipboard_command = "if you set this, an external program may be executed to store the selection or URL. begin with | to pipe into program or use parameters %s for text, %q for quoted text or %x for quoted escape sequence."
perl.coords.color.selection = "the color of the currently selected text in selection mode"
perl.coords.color.selection_cursor = "the weechat color and/or attribute to be used for the text cursor."
perl.coords.color.url_highlight = "the weechat color and/or attribute to be used for highlighting URLs in the copy window. seperate multiple attributes with ."
perl.coords.color.url_highlight_active = "the same as color.url_highlight except for the currently (using arrow keys) selected link."
perl.coords.copybuf_short_name = "short_name to use for coords buffer. it is set to the copy sign by default to not disturb buffers bar width, set to the empty string to have window position and size shown"
perl.coords.hyper_channels = "make channels to hyperlinks for join"
perl.coords.hyper_nicks = "make nicks to hyperlinks for menu/pm"
perl.coords.hyper_show = "set to types of hyperlinks that are shown by default"
perl.coords.mouse.click_select_pane = "set to on to use the mouse to select windows"
perl.coords.mouse.click_through_pane = "set to on if copy_on_click should work on inactive windows (works only if click_select_pane is set too). set to off if window needs to be active"
perl.coords.mouse.close_on_release = "set to on or a delay (in ms) to autoclose coords buffer opened by copy_on_click on button release, set to off if the coords buffer should stay open after click"
perl.coords.mouse.copy_on_click = "set to on if it should be possible to directly click on URLs and select text, set to off if mouse should only work in open coords buffer"
perl.coords.mouse.handle_scroll = "set to on if coords should handle scrolling inside windows. the script will try to guess non-chat areas to be nicklist, top to be title and bottom to be status and scroll the respective bars if the cursor is in that area. set to off if scrolling should be handled by the default mouse.pl script or another mouse scrolling script"
perl.coords.mouse.scroll_inactive_pane = "set to on if inactive windows should be scrolled instead of active window if the mouse cursor is over it (requires handle_scroll to be enabled)"
perl.coords.mouse.url_open_2nd_click = "if this is set, URLs are only opened when clicked twice (in the same incarnation of a coords buffer) instead of on first click. it can be set to a delay (in ms) that will be added to the close_on_release delay if the script is waiting for a second click on the URL to happen"
perl.coords.url_braces = "parenthesis-like characters which nest and should be excluded when found around an URL. make sure the variable setting nests properly when modifying this."
perl.coords.url_non_endings = "this is matched against the end of a link and removed"
perl.coords.url_regex = "a regular expression to identify URLs in the text. See perlre for more information about Perl regular expressions."
perl.coords.use_nick_menu = "use nick menu when opening nick hyperlink (see hyper_nicks, requires menu.pl script). otherwise open private message. this setting only applies to text mode selection, for mouse see mouse.nick_2nd_click"
perl.sysinfo.baritems = "comma separated list with name(s) of systeminformation to be displayed in a bar"
perl.sysinfo.color = "color for optionsname"
perl.sysinfo.nic = "comma separated list to specify your NIC interface name(s) (wlan0,eth0,etc)"
perl.sysinfo.nicname = "comma separated list with name(s) for interface(s) (wireless,cable,etc)"
perl.sysinfo.refresh = "refresh rate in seconds for info-bar (0 means off)"
perl.sysinfo.text_color = "text color for results"
perl.sysinfo.text_dummy = "separator between different options"
python.clone_scanner.autofocus = "Focus the clone_scanner buffer in the current window if it isn't already displayed by a window."
python.clone_scanner.clone_onjoin_alert_key = "Which 'key' to display in the on-join alerts: 'mask' for full hostmasks, or 'nick' for nicks"
python.clone_scanner.clone_report_key = "Which 'key' to display in the clone report: 'mask' for full hostmasks, or 'nick' for nicks"
python.clone_scanner.colors.clone_report.clone.match = "The colour of the match details (masks or nicks) in the clone report."
python.clone_scanner.colors.clone_report.clone.message = "The colour of the clone hit in the clone report message."
python.clone_scanner.colors.clone_report.header.channel = "The colour of the channel name in the clone report header."
python.clone_scanner.colors.clone_report.header.message = "The colour of the clone report header."
python.clone_scanner.colors.clone_report.header.number_of_hosts = "The colour of the number of hosts in the clone report header."
python.clone_scanner.colors.clone_report.subheader.host = "The colour of the host in the clone report subheader."
python.clone_scanner.colors.clone_report.subheader.message = "The colour of the clone report subheader."
python.clone_scanner.colors.clone_report.subheader.number_of_clones = "The colour of the number of clones in the clone report subheader."
python.clone_scanner.colors.join_messages.channel = "The colour for the 'channel'-part of the join messages."
python.clone_scanner.colors.join_messages.identhost = "The colour for the 'ident@host'-part of the join messages."
python.clone_scanner.colors.join_messages.message = "The base colour for the join messages."
python.clone_scanner.colors.join_messages.nick = "The colour for the 'nick'-part of the join messages. Note: if you have colorize_nicks, this option might not always work as expected."
python.clone_scanner.colors.mask.identhost = "The formatting of the identhost in the match mask."
python.clone_scanner.colors.mask.nick = "The formatting of the nick in the match mask."
python.clone_scanner.colors.onjoin_alert.channel = "The on-join clone alert's channel colour. Formats are space separated."
python.clone_scanner.colors.onjoin_alert.matches = "The on-join clone alert's matches (masks or nicks) colour. Formats are space separated. Note: if you have colorize_nicks, this option might not work as expected."
python.clone_scanner.colors.onjoin_alert.message = "The on-join clone alert's message colour. Formats are space separated."
python.clone_scanner.colors.onjoin_alert.nick = "The on-join clone alert's nick colour. Formats are space separated. Note: if you have colorize_nicks, this option might not work as expected."
python.clone_scanner.compare_idents = "Match against ident@host.name instead of just the hostname. Useful if you don't want different people from bouncers marked as clones"
python.clone_scanner.display_join_messages = "Display all joins in the clone_scanner buffer"
python.clone_scanner.display_onjoin_alert_clone_buffer = "Display an on-join clone alert in the clone_scanner buffer"
python.clone_scanner.display_onjoin_alert_current_buffer = "Display an on-join clone alert in the current buffer"
python.clone_scanner.display_onjoin_alert_target_buffer = "Display an on-join clone alert in the buffer where the clone was detected"
python.clone_scanner.display_scan_report_clone_buffer = "Display manual scan reports in the clone buffer"
python.clone_scanner.display_scan_report_current_buffer = "Display manual scan reports in the current buffer"
python.clone_scanner.display_scan_report_target_buffer = "Display manual scan reports in the buffer of the scanned channel"
python.whois_on_query.command = "the command sent to do the whois ($nick is repladed by nick) (default: "/whois $nick $nick")"
python.whois_on_query.self_query = "if on, send whois for self queries (default: "off")"
